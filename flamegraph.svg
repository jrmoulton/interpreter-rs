<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1638" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1621.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1621.00"> </text><svg id="frames" x="10" width="1180" total_samples="41"><g><title>repl`core::iter::adapters::try_process (1 samples, 2.44%)</title><rect x="0.0000%" y="725" width="2.4390%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.44%)</title><rect x="0.0000%" y="709" width="2.4390%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50">re..</text></g><g><title>repl`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.44%)</title><rect x="0.0000%" y="693" width="2.4390%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50">re..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="0.0000%" y="677" width="2.4390%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="0.0000%" y="661" width="2.4390%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50">li..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="2.4390%" y="661" width="2.4390%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="2.6890%" y="671.50">li..</text></g><g><title>repl`core::iter::adapters::try_process (1 samples, 2.44%)</title><rect x="4.8780%" y="565" width="2.4390%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="5.1280%" y="575.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.44%)</title><rect x="4.8780%" y="549" width="2.4390%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="5.1280%" y="559.50">re..</text></g><g><title>repl`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.44%)</title><rect x="4.8780%" y="533" width="2.4390%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="5.1280%" y="543.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="4.8780%" y="517" width="2.4390%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="5.1280%" y="527.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="4.8780%" y="501" width="2.4390%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="5.1280%" y="511.50">re..</text></g><g><title>repl`&lt;lexer::LocTok as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="4.8780%" y="485" width="2.4390%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="5.1280%" y="495.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="4.8780%" y="469" width="2.4390%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="5.1280%" y="479.50">li..</text></g><g><title>repl`core::iter::traits::iterator::Iterator::for_each (1 samples, 2.44%)</title><rect x="7.3171%" y="565" width="2.4390%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="7.5671%" y="575.50">re..</text></g><g><title>repl`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 2.44%)</title><rect x="7.3171%" y="549" width="2.4390%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="7.5671%" y="559.50">re..</text></g><g><title>repl`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 2.44%)</title><rect x="7.3171%" y="533" width="2.4390%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="7.5671%" y="543.50">re..</text></g><g><title>repl`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 2.44%)</title><rect x="7.3171%" y="517" width="2.4390%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="7.5671%" y="527.50">re..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 2.44%)</title><rect x="7.3171%" y="501" width="2.4390%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="7.5671%" y="511.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 2.44%)</title><rect x="7.3171%" y="485" width="2.4390%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="7.5671%" y="495.50">li..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="12.1951%" y="501" width="2.4390%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="12.4451%" y="511.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="12.1951%" y="485" width="2.4390%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="12.4451%" y="495.50">re..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="12.1951%" y="469" width="2.4390%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="12.4451%" y="479.50">li..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 2.44%)</title><rect x="17.0732%" y="421" width="2.4390%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="17.3232%" y="431.50">li..</text></g><g><title>repl`core::iter::adapters::try_process (1 samples, 2.44%)</title><rect x="19.5122%" y="405" width="2.4390%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="19.7622%" y="415.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.44%)</title><rect x="19.5122%" y="389" width="2.4390%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="19.7622%" y="399.50">re..</text></g><g><title>repl`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 2.44%)</title><rect x="19.5122%" y="373" width="2.4390%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="19.7622%" y="383.50">re..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="19.5122%" y="357" width="2.4390%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="19.7622%" y="367.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="19.5122%" y="341" width="2.4390%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="19.7622%" y="351.50">re..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="19.5122%" y="325" width="2.4390%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="19.7622%" y="335.50">li..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ElseIfExpr&gt; (1 samples, 2.44%)</title><rect x="21.9512%" y="373" width="2.4390%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="22.2012%" y="383.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="21.9512%" y="357" width="2.4390%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="22.2012%" y="367.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="21.9512%" y="341" width="2.4390%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="22.2012%" y="351.50">re..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 2.44%)</title><rect x="21.9512%" y="325" width="2.4390%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="22.2012%" y="335.50">li..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="24.3902%" y="341" width="2.4390%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="24.6402%" y="351.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="24.3902%" y="325" width="2.4390%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="24.6402%" y="335.50">re..</text></g><g><title>repl`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.44%)</title><rect x="24.3902%" y="309" width="2.4390%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="24.6402%" y="319.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="24.3902%" y="293" width="2.4390%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="24.6402%" y="303.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="24.3902%" y="277" width="2.4390%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="24.6402%" y="287.50">re..</text></g><g><title>repl`&lt;lexer::LocTok as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="24.3902%" y="261" width="2.4390%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="24.6402%" y="271.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="24.3902%" y="245" width="2.4390%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="24.6402%" y="255.50">li..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="29.2683%" y="261" width="2.4390%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="1"/><text x="29.5183%" y="271.50">re..</text></g><g><title>repl`core::iter::adapters::try_process (3 samples, 7.32%)</title><rect x="26.8293%" y="325" width="7.3171%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="3"/><text x="27.0793%" y="335.50">repl`core:..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 7.32%)</title><rect x="26.8293%" y="309" width="7.3171%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="3"/><text x="27.0793%" y="319.50">repl`&lt;allo..</text></g><g><title>repl`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 4.88%)</title><rect x="29.2683%" y="293" width="4.8780%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="2"/><text x="29.5183%" y="303.50">repl`&lt;..</text></g><g><title>repl`evaluator::eval_expr_base (2 samples, 4.88%)</title><rect x="29.2683%" y="277" width="4.8780%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="2"/><text x="29.5183%" y="287.50">repl`e..</text></g><g><title>repl`evaluator::eval_binary_expr (1 samples, 2.44%)</title><rect x="31.7073%" y="261" width="2.4390%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="31.9573%" y="271.50">re..</text></g><g><title>repl`DYLD-STUB$$free (1 samples, 2.44%)</title><rect x="31.7073%" y="245" width="2.4390%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="1"/><text x="31.9573%" y="255.50">re..</text></g><g><title>repl`core::iter::traits::iterator::Iterator::for_each (1 samples, 2.44%)</title><rect x="34.1463%" y="325" width="2.4390%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="34.3963%" y="335.50">re..</text></g><g><title>repl`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 2.44%)</title><rect x="34.1463%" y="309" width="2.4390%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="1"/><text x="34.3963%" y="319.50">re..</text></g><g><title>repl`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 2.44%)</title><rect x="34.1463%" y="293" width="2.4390%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="1"/><text x="34.3963%" y="303.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;parser::structs::Ident&gt;&gt; (1 samples, 2.44%)</title><rect x="36.5854%" y="325" width="2.4390%" height="15" fill="rgb(225,35,8)" fg:x="15" fg:w="1"/><text x="36.8354%" y="335.50">re..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="36.5854%" y="309" width="2.4390%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="36.8354%" y="319.50">li..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 2.44%)</title><rect x="39.0244%" y="261" width="2.4390%" height="15" fill="rgb(247,123,22)" fg:x="16" fg:w="1"/><text x="39.2744%" y="271.50">li..</text></g><g><title>repl`evaluator::eval_binary_expr (1 samples, 2.44%)</title><rect x="41.4634%" y="261" width="2.4390%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="1"/><text x="41.7134%" y="271.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="41.4634%" y="245" width="2.4390%" height="15" fill="rgb(231,145,46)" fg:x="17" fg:w="1"/><text x="41.7134%" y="255.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="41.4634%" y="229" width="2.4390%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="1"/><text x="41.7134%" y="239.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="41.4634%" y="213" width="2.4390%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="1"/><text x="41.7134%" y="223.50">re..</text></g><g><title>repl`core::iter::traits::iterator::Iterator::for_each (1 samples, 2.44%)</title><rect x="46.3415%" y="245" width="2.4390%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="1"/><text x="46.5915%" y="255.50">re..</text></g><g><title>repl`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 2.44%)</title><rect x="46.3415%" y="229" width="2.4390%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="1"/><text x="46.5915%" y="239.50">re..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 2.44%)</title><rect x="46.3415%" y="213" width="2.4390%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="46.5915%" y="223.50">li..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="48.7805%" y="213" width="2.4390%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="1"/><text x="49.0305%" y="223.50">li..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 2.44%)</title><rect x="51.2195%" y="181" width="2.4390%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="1"/><text x="51.4695%" y="191.50">li..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="53.6585%" y="181" width="2.4390%" height="15" fill="rgb(210,229,1)" fg:x="22" fg:w="1"/><text x="53.9085%" y="191.50">re..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="53.6585%" y="165" width="2.4390%" height="15" fill="rgb(222,148,37)" fg:x="22" fg:w="1"/><text x="53.9085%" y="175.50">li..</text></g><g><title>repl`core::iter::adapters::try_process (1 samples, 2.44%)</title><rect x="56.0976%" y="165" width="2.4390%" height="15" fill="rgb(234,67,33)" fg:x="23" fg:w="1"/><text x="56.3476%" y="175.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.44%)</title><rect x="56.0976%" y="149" width="2.4390%" height="15" fill="rgb(247,98,35)" fg:x="23" fg:w="1"/><text x="56.3476%" y="159.50">re..</text></g><g><title>repl`evaluator::eval (1 samples, 2.44%)</title><rect x="58.5366%" y="165" width="2.4390%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="1"/><text x="58.7866%" y="175.50">re..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="58.5366%" y="149" width="2.4390%" height="15" fill="rgb(213,79,30)" fg:x="24" fg:w="1"/><text x="58.7866%" y="159.50">re..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="58.5366%" y="133" width="2.4390%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="1"/><text x="58.7866%" y="143.50">re..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="58.5366%" y="117" width="2.4390%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="1"/><text x="58.7866%" y="127.50">re..</text></g><g><title>repl`DYLD-STUB$$pthread_mutex_lock (1 samples, 2.44%)</title><rect x="58.5366%" y="101" width="2.4390%" height="15" fill="rgb(216,154,8)" fg:x="24" fg:w="1"/><text x="58.7866%" y="111.50">re..</text></g><g><title>repl`evaluator::eval (5 samples, 12.20%)</title><rect x="51.2195%" y="213" width="12.1951%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="5"/><text x="51.4695%" y="223.50">repl`evaluator::ev..</text></g><g><title>repl`evaluator::eval_expr_base (5 samples, 12.20%)</title><rect x="51.2195%" y="197" width="12.1951%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="5"/><text x="51.4695%" y="207.50">repl`evaluator::ev..</text></g><g><title>repl`evaluator::eval_expr_base (3 samples, 7.32%)</title><rect x="56.0976%" y="181" width="7.3171%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="3"/><text x="56.3476%" y="191.50">repl`evalu..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="60.9756%" y="165" width="2.4390%" height="15" fill="rgb(233,84,52)" fg:x="25" fg:w="1"/><text x="61.2256%" y="175.50">re..</text></g><g><title>repl`evaluator::structs::Environment::find (1 samples, 2.44%)</title><rect x="60.9756%" y="149" width="2.4390%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="1"/><text x="61.2256%" y="159.50">re..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 2.44%)</title><rect x="60.9756%" y="133" width="2.4390%" height="15" fill="rgb(249,43,39)" fg:x="25" fg:w="1"/><text x="61.2256%" y="143.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="117" width="2.4390%" height="15" fill="rgb(209,38,44)" fg:x="25" fg:w="1"/><text x="61.2256%" y="127.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="101" width="2.4390%" height="15" fill="rgb(236,212,23)" fg:x="25" fg:w="1"/><text x="61.2256%" y="111.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="85" width="2.4390%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="1"/><text x="61.2256%" y="95.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="69" width="2.4390%" height="15" fill="rgb(211,96,35)" fg:x="25" fg:w="1"/><text x="61.2256%" y="79.50">re..</text></g><g><title>repl`&lt;lexer::LocTok as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="53" width="2.4390%" height="15" fill="rgb(253,215,40)" fg:x="25" fg:w="1"/><text x="61.2256%" y="63.50">re..</text></g><g><title>repl`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="60.9756%" y="37" width="2.4390%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="1"/><text x="61.2256%" y="47.50">re..</text></g><g><title>repl`evaluator::eval (7 samples, 17.07%)</title><rect x="48.7805%" y="245" width="17.0732%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="7"/><text x="49.0305%" y="255.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (7 samples, 17.07%)</title><rect x="48.7805%" y="229" width="17.0732%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="7"/><text x="49.0305%" y="239.50">repl`evaluator::eval_expr_..</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="63.4146%" y="213" width="2.4390%" height="15" fill="rgb(237,122,38)" fg:x="26" fg:w="1"/><text x="63.6646%" y="223.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="63.4146%" y="197" width="2.4390%" height="15" fill="rgb(244,218,35)" fg:x="26" fg:w="1"/><text x="63.6646%" y="207.50">re..</text></g><g><title>repl`&lt;lexer::LocTok as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="63.4146%" y="181" width="2.4390%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="1"/><text x="63.6646%" y="191.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="63.4146%" y="165" width="2.4390%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="1"/><text x="63.6646%" y="175.50">li..</text></g><g><title>repl`evaluator::eval (12 samples, 29.27%)</title><rect x="39.0244%" y="293" width="29.2683%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="12"/><text x="39.2744%" y="303.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (12 samples, 29.27%)</title><rect x="39.0244%" y="277" width="29.2683%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="12"/><text x="39.2744%" y="287.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (10 samples, 24.39%)</title><rect x="43.9024%" y="261" width="24.3902%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="10"/><text x="44.1524%" y="271.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="65.8537%" y="245" width="2.4390%" height="15" fill="rgb(242,216,29)" fg:x="27" fg:w="1"/><text x="66.1037%" y="255.50">re..</text></g><g><title>repl`evaluator::structs::Environment::find (1 samples, 2.44%)</title><rect x="65.8537%" y="229" width="2.4390%" height="15" fill="rgb(230,116,27)" fg:x="27" fg:w="1"/><text x="66.1037%" y="239.50">re..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 2.44%)</title><rect x="65.8537%" y="213" width="2.4390%" height="15" fill="rgb(228,99,48)" fg:x="27" fg:w="1"/><text x="66.1037%" y="223.50">re..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 2.44%)</title><rect x="65.8537%" y="197" width="2.4390%" height="15" fill="rgb(253,11,6)" fg:x="27" fg:w="1"/><text x="66.1037%" y="207.50">li..</text></g><g><title>repl`evaluator::eval (13 samples, 31.71%)</title><rect x="39.0244%" y="325" width="31.7073%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="13"/><text x="39.2744%" y="335.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (13 samples, 31.71%)</title><rect x="39.0244%" y="309" width="31.7073%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="13"/><text x="39.2744%" y="319.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="68.2927%" y="293" width="2.4390%" height="15" fill="rgb(233,208,19)" fg:x="28" fg:w="1"/><text x="68.5427%" y="303.50">re..</text></g><g><title>repl`evaluator::eval_binary_expr (1 samples, 2.44%)</title><rect x="68.2927%" y="277" width="2.4390%" height="15" fill="rgb(216,164,2)" fg:x="28" fg:w="1"/><text x="68.5427%" y="287.50">re..</text></g><g><title>repl`core::ptr::drop_in_place&lt;parser::structs::ExprBase&gt; (1 samples, 2.44%)</title><rect x="68.2927%" y="261" width="2.4390%" height="15" fill="rgb(220,129,5)" fg:x="28" fg:w="1"/><text x="68.5427%" y="271.50">re..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="68.2927%" y="245" width="2.4390%" height="15" fill="rgb(242,17,10)" fg:x="28" fg:w="1"/><text x="68.5427%" y="255.50">li..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 2.44%)</title><rect x="70.7317%" y="293" width="2.4390%" height="15" fill="rgb(242,107,0)" fg:x="29" fg:w="1"/><text x="70.9817%" y="303.50">li..</text></g><g><title>repl`evaluator::eval (21 samples, 51.22%)</title><rect x="24.3902%" y="373" width="51.2195%" height="15" fill="rgb(251,28,31)" fg:x="10" fg:w="21"/><text x="24.6402%" y="383.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (21 samples, 51.22%)</title><rect x="24.3902%" y="357" width="51.2195%" height="15" fill="rgb(233,223,10)" fg:x="10" fg:w="21"/><text x="24.6402%" y="367.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (20 samples, 48.78%)</title><rect x="26.8293%" y="341" width="48.7805%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="20"/><text x="27.0793%" y="351.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (2 samples, 4.88%)</title><rect x="70.7317%" y="325" width="4.8780%" height="15" fill="rgb(232,23,21)" fg:x="29" fg:w="2"/><text x="70.9817%" y="335.50">repl`e..</text></g><g><title>repl`evaluator::structs::Environment::find (2 samples, 4.88%)</title><rect x="70.7317%" y="309" width="4.8780%" height="15" fill="rgb(244,5,23)" fg:x="29" fg:w="2"/><text x="70.9817%" y="319.50">repl`e..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 2.44%)</title><rect x="73.1707%" y="293" width="2.4390%" height="15" fill="rgb(226,81,46)" fg:x="30" fg:w="1"/><text x="73.4207%" y="303.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="73.1707%" y="277" width="2.4390%" height="15" fill="rgb(247,70,30)" fg:x="30" fg:w="1"/><text x="73.4207%" y="287.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="73.1707%" y="261" width="2.4390%" height="15" fill="rgb(212,68,19)" fg:x="30" fg:w="1"/><text x="73.4207%" y="271.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="73.1707%" y="245" width="2.4390%" height="15" fill="rgb(240,187,13)" fg:x="30" fg:w="1"/><text x="73.4207%" y="255.50">re..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 2.44%)</title><rect x="78.0488%" y="357" width="2.4390%" height="15" fill="rgb(223,113,26)" fg:x="32" fg:w="1"/><text x="78.2988%" y="367.50">li..</text></g><g><title>repl`evaluator::eval (25 samples, 60.98%)</title><rect x="21.9512%" y="405" width="60.9756%" height="15" fill="rgb(206,192,2)" fg:x="9" fg:w="25"/><text x="22.2012%" y="415.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (25 samples, 60.98%)</title><rect x="21.9512%" y="389" width="60.9756%" height="15" fill="rgb(241,108,4)" fg:x="9" fg:w="25"/><text x="22.2012%" y="399.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (3 samples, 7.32%)</title><rect x="75.6098%" y="373" width="7.3171%" height="15" fill="rgb(247,173,49)" fg:x="31" fg:w="3"/><text x="75.8598%" y="383.50">repl`evalu..</text></g><g><title>libsystem_malloc.dylib`free (1 samples, 2.44%)</title><rect x="80.4878%" y="357" width="2.4390%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="1"/><text x="80.7378%" y="367.50">li..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 2.44%)</title><rect x="82.9268%" y="389" width="2.4390%" height="15" fill="rgb(245,159,27)" fg:x="34" fg:w="1"/><text x="83.1768%" y="399.50">li..</text></g><g><title>repl`evaluator::eval (31 samples, 75.61%)</title><rect x="14.6341%" y="485" width="75.6098%" height="15" fill="rgb(245,172,44)" fg:x="6" fg:w="31"/><text x="14.8841%" y="495.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (31 samples, 75.61%)</title><rect x="14.6341%" y="469" width="75.6098%" height="15" fill="rgb(236,23,11)" fg:x="6" fg:w="31"/><text x="14.8841%" y="479.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (31 samples, 75.61%)</title><rect x="14.6341%" y="453" width="75.6098%" height="15" fill="rgb(205,117,38)" fg:x="6" fg:w="31"/><text x="14.8841%" y="463.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (31 samples, 75.61%)</title><rect x="14.6341%" y="437" width="75.6098%" height="15" fill="rgb(237,72,25)" fg:x="6" fg:w="31"/><text x="14.8841%" y="447.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (29 samples, 70.73%)</title><rect x="19.5122%" y="421" width="70.7317%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="29"/><text x="19.7622%" y="431.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (3 samples, 7.32%)</title><rect x="82.9268%" y="405" width="7.3171%" height="15" fill="rgb(217,125,39)" fg:x="34" fg:w="3"/><text x="83.1768%" y="415.50">repl`evalu..</text></g><g><title>repl`evaluator::structs::Environment::find (2 samples, 4.88%)</title><rect x="85.3659%" y="389" width="4.8780%" height="15" fill="rgb(235,36,10)" fg:x="35" fg:w="2"/><text x="85.6159%" y="399.50">repl`e..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 4.88%)</title><rect x="85.3659%" y="373" width="4.8780%" height="15" fill="rgb(251,123,47)" fg:x="35" fg:w="2"/><text x="85.6159%" y="383.50">repl`c..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.88%)</title><rect x="85.3659%" y="357" width="4.8780%" height="15" fill="rgb(221,13,13)" fg:x="35" fg:w="2"/><text x="85.6159%" y="367.50">repl`&lt;..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (2 samples, 4.88%)</title><rect x="85.3659%" y="341" width="4.8780%" height="15" fill="rgb(238,131,9)" fg:x="35" fg:w="2"/><text x="85.6159%" y="351.50">repl`&lt;..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.88%)</title><rect x="85.3659%" y="325" width="4.8780%" height="15" fill="rgb(211,50,8)" fg:x="35" fg:w="2"/><text x="85.6159%" y="335.50">repl`&lt;..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="87.8049%" y="309" width="2.4390%" height="15" fill="rgb(245,182,24)" fg:x="36" fg:w="1"/><text x="88.0549%" y="319.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="87.8049%" y="293" width="2.4390%" height="15" fill="rgb(242,14,37)" fg:x="36" fg:w="1"/><text x="88.0549%" y="303.50">re..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 2.44%)</title><rect x="87.8049%" y="277" width="2.4390%" height="15" fill="rgb(246,228,12)" fg:x="36" fg:w="1"/><text x="88.0549%" y="287.50">li..</text></g><g><title>repl`evaluator::eval (37 samples, 90.24%)</title><rect x="4.8780%" y="613" width="90.2439%" height="15" fill="rgb(213,55,15)" fg:x="2" fg:w="37"/><text x="5.1280%" y="623.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (37 samples, 90.24%)</title><rect x="4.8780%" y="597" width="90.2439%" height="15" fill="rgb(209,9,3)" fg:x="2" fg:w="37"/><text x="5.1280%" y="607.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (37 samples, 90.24%)</title><rect x="4.8780%" y="581" width="90.2439%" height="15" fill="rgb(230,59,30)" fg:x="2" fg:w="37"/><text x="5.1280%" y="591.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (35 samples, 85.37%)</title><rect x="9.7561%" y="565" width="85.3659%" height="15" fill="rgb(209,121,21)" fg:x="4" fg:w="35"/><text x="10.0061%" y="575.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (35 samples, 85.37%)</title><rect x="9.7561%" y="549" width="85.3659%" height="15" fill="rgb(220,109,13)" fg:x="4" fg:w="35"/><text x="10.0061%" y="559.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (35 samples, 85.37%)</title><rect x="9.7561%" y="533" width="85.3659%" height="15" fill="rgb(232,18,1)" fg:x="4" fg:w="35"/><text x="10.0061%" y="543.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (34 samples, 82.93%)</title><rect x="12.1951%" y="517" width="82.9268%" height="15" fill="rgb(215,41,42)" fg:x="5" fg:w="34"/><text x="12.4451%" y="527.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (33 samples, 80.49%)</title><rect x="14.6341%" y="501" width="80.4878%" height="15" fill="rgb(224,123,36)" fg:x="6" fg:w="33"/><text x="14.8841%" y="511.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (2 samples, 4.88%)</title><rect x="90.2439%" y="485" width="4.8780%" height="15" fill="rgb(240,125,3)" fg:x="37" fg:w="2"/><text x="90.4939%" y="495.50">repl`e..</text></g><g><title>repl`evaluator::structs::Environment::find (2 samples, 4.88%)</title><rect x="90.2439%" y="469" width="4.8780%" height="15" fill="rgb(205,98,50)" fg:x="37" fg:w="2"/><text x="90.4939%" y="479.50">repl`e..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 4.88%)</title><rect x="90.2439%" y="453" width="4.8780%" height="15" fill="rgb(205,185,37)" fg:x="37" fg:w="2"/><text x="90.4939%" y="463.50">repl`c..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="92.6829%" y="437" width="2.4390%" height="15" fill="rgb(238,207,15)" fg:x="38" fg:w="1"/><text x="92.9329%" y="447.50">re..</text></g><g><title>repl`evaluator::eval (38 samples, 92.68%)</title><rect x="4.8780%" y="645" width="92.6829%" height="15" fill="rgb(213,199,42)" fg:x="2" fg:w="38"/><text x="5.1280%" y="655.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (38 samples, 92.68%)</title><rect x="4.8780%" y="629" width="92.6829%" height="15" fill="rgb(235,201,11)" fg:x="2" fg:w="38"/><text x="5.1280%" y="639.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="95.1220%" y="613" width="2.4390%" height="15" fill="rgb(207,46,11)" fg:x="39" fg:w="1"/><text x="95.3720%" y="623.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="95.1220%" y="597" width="2.4390%" height="15" fill="rgb(241,35,35)" fg:x="39" fg:w="1"/><text x="95.3720%" y="607.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="95.1220%" y="581" width="2.4390%" height="15" fill="rgb(243,32,47)" fg:x="39" fg:w="1"/><text x="95.3720%" y="591.50">re..</text></g><g><title>repl`&lt;lexer::LocTok as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="95.1220%" y="565" width="2.4390%" height="15" fill="rgb(247,202,23)" fg:x="39" fg:w="1"/><text x="95.3720%" y="575.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="95.1220%" y="549" width="2.4390%" height="15" fill="rgb(219,102,11)" fg:x="39" fg:w="1"/><text x="95.3720%" y="559.50">li..</text></g><g><title>all (41 samples, 100%)</title><rect x="0.0000%" y="1589" width="100.0000%" height="15" fill="rgb(243,110,44)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1599.50"></text></g><g><title>dyld`start (41 samples, 100.00%)</title><rect x="0.0000%" y="1573" width="100.0000%" height="15" fill="rgb(222,74,54)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1583.50">dyld`start</text></g><g><title>repl`main (41 samples, 100.00%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(216,99,12)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1567.50">repl`main</text></g><g><title>repl`std::rt::lang_start_internal (41 samples, 100.00%)</title><rect x="0.0000%" y="1541" width="100.0000%" height="15" fill="rgb(226,22,26)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1551.50">repl`std::rt::lang_start_internal</text></g><g><title>repl`std::rt::lang_start::_{{closure}} (41 samples, 100.00%)</title><rect x="0.0000%" y="1525" width="100.0000%" height="15" fill="rgb(217,163,10)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1535.50">repl`std::rt::lang_start::_{{closure}}</text></g><g><title>repl`std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 100.00%)</title><rect x="0.0000%" y="1509" width="100.0000%" height="15" fill="rgb(213,25,53)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1519.50">repl`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>repl`repl::main (41 samples, 100.00%)</title><rect x="0.0000%" y="1493" width="100.0000%" height="15" fill="rgb(252,105,26)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1503.50">repl`repl::main</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1487.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(229,68,48)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1471.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1445" width="100.0000%" height="15" fill="rgb(252,8,32)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1455.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(223,20,43)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1439.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1413" width="100.0000%" height="15" fill="rgb(229,81,49)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1423.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(236,28,36)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1407.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1381" width="100.0000%" height="15" fill="rgb(249,185,26)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1391.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(249,174,33)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1375.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1349" width="100.0000%" height="15" fill="rgb(233,201,37)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1359.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1333" width="100.0000%" height="15" fill="rgb(221,78,26)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1343.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1317" width="100.0000%" height="15" fill="rgb(250,127,30)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1327.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1301" width="100.0000%" height="15" fill="rgb(230,49,44)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1311.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1295.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1279.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1263.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1247.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1231.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1215.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1199.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1183.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1167.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1151.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(235,168,5)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1135.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1119.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1103.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1087.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1071.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1055.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1039.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1023.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="41"/><text x="0.2500%" y="1007.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="41"/><text x="0.2500%" y="991.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(233,25,53)" fg:x="0" fg:w="41"/><text x="0.2500%" y="975.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(210,40,34)" fg:x="0" fg:w="41"/><text x="0.2500%" y="959.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(241,220,44)" fg:x="0" fg:w="41"/><text x="0.2500%" y="943.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(235,28,35)" fg:x="0" fg:w="41"/><text x="0.2500%" y="927.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(210,56,17)" fg:x="0" fg:w="41"/><text x="0.2500%" y="911.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(224,130,29)" fg:x="0" fg:w="41"/><text x="0.2500%" y="895.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(235,212,8)" fg:x="0" fg:w="41"/><text x="0.2500%" y="879.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="41"/><text x="0.2500%" y="863.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(219,149,13)" fg:x="0" fg:w="41"/><text x="0.2500%" y="847.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(250,156,29)" fg:x="0" fg:w="41"/><text x="0.2500%" y="831.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(216,193,19)" fg:x="0" fg:w="41"/><text x="0.2500%" y="815.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(216,135,14)" fg:x="0" fg:w="41"/><text x="0.2500%" y="799.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (41 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(241,47,5)" fg:x="0" fg:w="41"/><text x="0.2500%" y="783.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(233,42,35)" fg:x="0" fg:w="41"/><text x="0.2500%" y="767.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (41 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(231,13,6)" fg:x="0" fg:w="41"/><text x="0.2500%" y="751.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (40 samples, 97.56%)</title><rect x="2.4390%" y="725" width="97.5610%" height="15" fill="rgb(207,181,40)" fg:x="1" fg:w="40"/><text x="2.6890%" y="735.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (40 samples, 97.56%)</title><rect x="2.4390%" y="709" width="97.5610%" height="15" fill="rgb(254,173,49)" fg:x="1" fg:w="40"/><text x="2.6890%" y="719.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval (40 samples, 97.56%)</title><rect x="2.4390%" y="693" width="97.5610%" height="15" fill="rgb(221,1,38)" fg:x="1" fg:w="40"/><text x="2.6890%" y="703.50">repl`evaluator::eval</text></g><g><title>repl`evaluator::eval_expr_base (40 samples, 97.56%)</title><rect x="2.4390%" y="677" width="97.5610%" height="15" fill="rgb(206,124,46)" fg:x="1" fg:w="40"/><text x="2.6890%" y="687.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (39 samples, 95.12%)</title><rect x="4.8780%" y="661" width="95.1220%" height="15" fill="rgb(249,21,11)" fg:x="2" fg:w="39"/><text x="5.1280%" y="671.50">repl`evaluator::eval_expr_base</text></g><g><title>repl`evaluator::eval_expr_base (1 samples, 2.44%)</title><rect x="97.5610%" y="645" width="2.4390%" height="15" fill="rgb(222,201,40)" fg:x="40" fg:w="1"/><text x="97.8110%" y="655.50">re..</text></g><g><title>repl`evaluator::structs::Environment::find (1 samples, 2.44%)</title><rect x="97.5610%" y="629" width="2.4390%" height="15" fill="rgb(235,61,29)" fg:x="40" fg:w="1"/><text x="97.8110%" y="639.50">re..</text></g><g><title>repl`core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 2.44%)</title><rect x="97.5610%" y="613" width="2.4390%" height="15" fill="rgb(219,207,3)" fg:x="40" fg:w="1"/><text x="97.8110%" y="623.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="97.5610%" y="597" width="2.4390%" height="15" fill="rgb(222,56,46)" fg:x="40" fg:w="1"/><text x="97.8110%" y="607.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="97.5610%" y="581" width="2.4390%" height="15" fill="rgb(239,76,54)" fg:x="40" fg:w="1"/><text x="97.8110%" y="591.50">re..</text></g><g><title>repl`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="97.5610%" y="565" width="2.4390%" height="15" fill="rgb(231,124,27)" fg:x="40" fg:w="1"/><text x="97.8110%" y="575.50">re..</text></g><g><title>repl`&lt;parser::structs::ExprBase as core::clone::Clone&gt;::clone (1 samples, 2.44%)</title><rect x="97.5610%" y="549" width="2.4390%" height="15" fill="rgb(249,195,6)" fg:x="40" fg:w="1"/><text x="97.8110%" y="559.50">re..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 2.44%)</title><rect x="97.5610%" y="533" width="2.4390%" height="15" fill="rgb(237,174,47)" fg:x="40" fg:w="1"/><text x="97.8110%" y="543.50">li..</text></g></svg></svg>