[
    Expression(
        NonTerminated(
            FuncLiteral(
                FnLiteral {
                    parameters: [
                        Ident(
                            Token(Ident("x"), (0,3)->(0,3)),
                        ),
                        Ident(
                            Token(Ident("y"), (0,6)->(0,6)),
                        ),
                    ],
                    body: Scope {
                        statements: [
                            Expression(
                                NonTerminated(
                                    BinaryExpression(
                                        BinExp {
                                            lhs: Identifier(
                                                Ident(
                                                    Token(Ident("x"), (1,8)->(1,8)),
                                                ),
                                            ),
                                            operator: Token(Plus, (1,10)->(1,10)),
                                            rhs: Identifier(
                                                Ident(
                                                    Token(Ident("y"), (1,12)->(1,12)),
                                                ),
                                            ),
                                            span: (1,8)->(1,12),
                                        },
                                    ),
                                ),
                            ),
                        ],
                        span: (0,9)->(2,4),
                    },
                    span: (0,0)->(2,4),
                },
            ),
        ),
    ),
]