[
    Expression(
        NonTerminated(
            FuncLiteral(
                FnLiteral {
                    parameters: [
                        Ident(
                            Token(Ident("x"), (0,3)->(0,4)),
                        ),
                        Ident(
                            Token(Ident("y"), (0,6)->(0,7)),
                        ),
                    ],
                    body: Scope {
                        statements: [
                            Expression(
                                NonTerminated(
                                    BinaryExpression(
                                        BinExp {
                                            lhs: Identifier(
                                                Ident(
                                                    Token(Ident("x"), (1,8)->(1,9)),
                                                ),
                                            ),
                                            operator: Token(Plus, (1,10)->(1,11)),
                                            rhs: Identifier(
                                                Ident(
                                                    Token(Ident("y"), (1,12)->(1,13)),
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                            ),
                        ],
                    },
                },
            ),
        ),
    ),
]