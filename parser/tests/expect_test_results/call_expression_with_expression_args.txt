[
    Expression(
        NonTerminated(
            CallExpression(
                CallExpr {
                    function: Identifier(
                        Ident(
                            Ident("call_func"),
                        ),
                    ),
                    args: [
                        IntLiteral(
                            Int(2),
                        ),
                        IntLiteral(
                            Int(3),
                        ),
                        FuncLiteral(
                            FnLiteral {
                                parameters: [
                                    Ident(
                                        Ident("x"),
                                    ),
                                    Ident(
                                        Ident("y"),
                                    ),
                                ],
                                body: Scope {
                                    statements: [
                                        Expression(
                                            NonTerminated(
                                                BinaryExpression(
                                                    BinExp {
                                                        lhs: Identifier(
                                                            Ident(
                                                                Ident("x"),
                                                            ),
                                                        ),
                                                        operator: Plus,
                                                        rhs: Identifier(
                                                            Ident(
                                                                Ident("y"),
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ],
                                },
                            },
                        ),
                    ],
                },
            ),
        ),
    ),
]