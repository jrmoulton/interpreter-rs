[
    Let(
        LetStatement {
            ident: Token(Ident("x"), (0,4)->(0,5)),
            expr: Terminated(
                BinaryExpression(
                    BinExp {
                        lhs: IntLiteral(
                            Token(Int(10), (0,8)->(0,10)),
                        ),
                        operator: Token(Plus, (0,11)->(0,12)),
                        rhs: IntLiteral(
                            Token(Int(3), (0,13)->(0,14)),
                        ),
                    },
                ),
            ),
        },
    ),
]