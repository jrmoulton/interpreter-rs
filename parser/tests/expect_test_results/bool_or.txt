[
    Expression(
        NonTerminated(
            Binary {
                lhs: Binary {
                    lhs: IntLiteral(
                        Token(Int(3), (0,0)->(0,0)),
                    ),
                    operator: Token(Eq, (0,2)->(0,2)),
                    rhs: IntLiteral(
                        Token(Int(3), (0,5)->(0,5)),
                    ),
                    span: (0,0)->(0,5),
                },
                operator: Token(Or, (0,7)->(0,8)),
                rhs: Binary {
                    lhs: IntLiteral(
                        Token(Int(5), (0,10)->(0,10)),
                    ),
                    operator: Token(Eq, (0,12)->(0,12)),
                    rhs: IntLiteral(
                        Token(Int(6), (0,15)->(0,15)),
                    ),
                    span: (0,10)->(0,15),
                },
                span: (0,0)->(0,15),
            },
        ),
    ),
]